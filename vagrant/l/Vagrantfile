# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

###############################################################################
# Base box                                                                    #
###############################################################################
    config.vm.box = "puppetlabs/centos-6.6-64-puppet"

###############################################################################
# Global plugin settings                                                #
###############################################################################
    plugins = ["vagrant-hostmanager"]
    plugins.each do |plugin|
      unless Vagrant.has_plugin?(plugin)
        raise plugin << " has not been installed."
      end
    end

    # Configure cached packages to be shared between instances of the same base box.
    if Vagrant.has_plugin?("vagrant-cachier")
      config.cache.scope = :machine
    end

###############################################################################
# Global provisioning settings                                                #
###############################################################################
    default_env = 'l'
    ext_env = ENV['VAGRANT_PUPPET_ENV']
    env = ext_env ? ext_env : default_env
    PUPPET = "sudo puppet agent -t --environment #{env} --server puppetmaster.l.vagrant; echo $?"

###############################################################################
# Global VirtualBox settings                                                  #
###############################################################################
    config.vm.provider 'virtualbox' do |v|
    v.customize [
      'modifyvm', :id,
      '--groups', '/Vagrant/puppetmaster'
    ]
    end

###############################################################################
# Global /etc/hosts file settings                                                  #
###############################################################################
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
    config.hostmanager.ignore_private_ip = false
    config.hostmanager.include_offline = true

###############################################################################
# VM definitions                                                              #
###############################################################################
    config.vm.synced_folder ".", "/vagrant", disabled: true
    config.vm.define :puppetmaster do |puppetmaster_config|
      puppetmaster_config.vm.host_name = "puppetmaster.l.vagrant"
      puppetmaster_config.vm.network :private_network, ip: "192.168.25.130"
      puppetmaster_config.vm.synced_folder '../../manifests/', "/etc/puppet/environments/#{env}/manifests"
      puppetmaster_config.vm.synced_folder '../../modules/', "/etc/puppet/environments/#{env}/modules"
      puppetmaster_config.vm.synced_folder '../../hiera/', '/var/lib/hiera'
      puppetmaster_config.vm.synced_folder '../../files/', '/opt/files'
      puppetmaster_config.vm.provision :shell, inline: 'sudo cp /opt/files/hiera.yaml /etc/puppet/hiera.yaml'
      puppetmaster_config.vm.provision :shell, inline: 'sudo cp /opt/files/autosign.conf /etc/puppet/autosign.conf'
      puppetmaster_config.vm.provision :puppet do |puppet|
          puppet.options = "--environment bootstrap"
          puppet.manifests_path = "../../manifests"
          puppet.manifest_file  = ""
          puppet.module_path = "../../modules"
          puppet.hiera_config_path = "../../files/hiera.yaml"
      end
    end

    config.vm.define :puppetdb do |puppetdb_config|
      puppetdb_config.vm.host_name = "puppetdb.l.vagrant"
      puppetdb_config.vm.network :forwarded_port, guest: 22, host: 2132
      puppetdb_config.vm.network :private_network, ip: "192.168.25.132"
      puppetdb_config.vm.provision 'shell', inline: PUPPET
    end

    config.vm.define :foreman do |foreman_config|
      foreman_config.vm.host_name = "foreman.l.vagrant"
      foreman_config.vm.network :forwarded_port, guest: 22, host: 2133
      foreman_config.vm.network :private_network, ip: "192.168.25.133"
      foreman_config.vm.provision 'shell', inline: PUPPET
    end

    config.vm.define :node do |node_config|
      node_config.vm.host_name = "node.l.vagrant"
      node_config.vm.network :forwarded_port, guest: 22, host: 2140
      node_config.vm.network :private_network, ip: "192.168.25.140"
      node_config.vm.provision 'shell', inline: PUPPET
    end
end
